export declare const hash256: (input?: string) => string;
export declare const generateToken: (numberOfCharacters?: number) => string;
export declare const SecurePassword: {
    hash(password: string | null | undefined): Promise<string>;
    verify(hashedPassword: string | null | undefined, password: string | null | undefined): Promise<symbol>;
    HASH_BYTES: number;
    INVALID: symbol;
    INVALID_UNRECOGNIZED_HASH: symbol;
    MEMLIMIT_DEFAULT: number;
    MEMLIMIT_MAX: number;
    MEMLIMIT_MIN: number;
    OPSLIMIT_DEFAULT: number;
    OPSLIMIT_MAX: number;
    OPSLIMIT_MIN: number;
    PASSWORD_BYTES_MAX: number;
    PASSWORD_BYTES_MIN: number;
    VALID: symbol;
    VALID_NEEDS_REHASH: symbol;
};
export declare const hashPassword: (password: string) => Promise<string>;
export declare const verifyPassword: (hashedPassword: string, password: string) => Promise<false | symbol>;
export declare const authenticateUser: (prisma: any, email: string, password: string) => Promise<any>;
